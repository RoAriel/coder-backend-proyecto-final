paths:
  /api/products/:
    get:
      tags:
        - Products
      summary: Retorna todos los productos.
      description: Retorna todos los productos que entran en uan hoja.
      parameters:
        - in: query
          name: limit
          schema:
            type: number
            description: Numero de productos que quiero ver.
          example: 1
        - in: query
          name: page
          schema:
            type: number
            description: Numero de pagina que quiero ver.
          example: 1
        - in: query
          name: sort
          schema:
            type: string
            description: El orden de precios asc/desc.
          example: asc/desc
      responses:
        '200':    # status code
          description: Los productos fueron obtenidos correctamente.
          content:
            application/json:
              schema: 
                type: object
                items: 
                  $ref: '#components/schemas/ProductsPaginated'
    post:
      tags:
        - Products
      summary: Crea un producto.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/newProduct'
      responses:
        "201":
          description: Producto Creado
        "500":
          description: Error interno del servidor
                       
  /api/products/{pid}:
    get:
      tags:
        - Products
      summary: Retorna un producto.
      description: Retorna el producto al cual correspone el PID.
      parameters:
        - name: pid
          in: path
          required: true
          example: 6674a1436f05df233631f749
          description: id del producto que se est√° solicitando
      responses:
        '200':    # status code
          description: El producto fue obtenido correctamente.
          content:
            application/json:
              schema: 
                type: object
                items: 
                  $ref: '#components/schemas/ProductRespuesta'
    put:
      tags:
        - Products
      summary: Actualiza propiedad del producto
      description: "Las pros a modificar son: title /description /price /status /stock /category."
      parameters:
        - name: pid
          in: path
          type: ObjectId
          required: true
          example: 6674a1436f05df233631f749
          description: Id del producto a ser actualizado
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/putProduct'
      responses:
        '200':    # status code
          description: El producto fue actualizado correctamente.
          content:
            application/json:
              schema: 
                type: object
                items: 
                  $ref: '#components/schemas/ProductRespuesta'  
        '401':    # status code
          description: Privilegios insuficientes para acceder al recurso.
          content:
            application/json:
              schema: 
                type: object
                items: 
                  $ref: '#components/schemas/ProductRespuesta'     

    delete:
      tags:
        - Products
      summary: Elimina un producto
      parameters:
        - name: pid
          in: path
          type: ObjectId
          required: true
          description: Id a ser eliminado
          example: 6674a1436f05df233631f749
      
      responses:
        '200':    # status code
          description: El producto fue obtenido correctamente.
          content:
            application/json:
              schema: 
                type: object
                items: 
                  $ref: '#components/schemas/ProductRespuesta'

      