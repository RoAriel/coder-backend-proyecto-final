components:
  schemas:
    ProductDB:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id autogenerado de mongo
        title:
          type: string
          description: Nombre del producto.
        description:
          type: string
          description: Descipcion del producto.
        code:
          type: string
          description: Codigo interno del producto.
        price:
          type: number
          description: Precio del producto.
        status:
          type: boolean
          description: Estado del producto (disponible/no disponible).
        stock:
          type: number
          description: Stock disponible.
        category:
          type: string
          description: Categoria a la cual pertenece el producto.
        thumbnail:
          type: array
          items: 
            type: string
          description: Url del producto.
        updatedAt:
          type: date
          description: Fecha de creacion/ Actualizacion del producto.
        owner:
          type: string
          description: Quien creo el producto.
    ProductRespuesta:
      type: object
      properties:
        product:
          type: object
          $ref: '#components/schemas/ProductDB'
    ProductsPaginated:
      type: object
      properties:
        payload:
          type: object
          properties:
            status:
              type: string
              description: resultado de la operacion
            payload:
              type: array
              items:
                $ref: '#components/schemas/ProuctDB'
              description: Productos en la db
            totalPages: 
              type: number
              description: Total de paginas de productos
            prevPage: 
              type: number
              description: Pagina previa
            nextPage:
              type: number
              description: Pagina siguiente
            page: 
              type: number
              description: Pagina actual
            hasPrevPage: 
              type: boolean
              description: Tiene pagina previa
            hasNextPage: 
              type: boolean
              description: Tiene pagina siguiente
            prevLink:  
              type: string
              description: Link a pagina previa
            nextLink: 
              type: string
              description: Link a pagina siguiente
    CartRespuesta:
      type: object
      properties:
        cart:
          type: object
          description: El carrito
        properties:
          _id:
            type: ObjectId
            description: Id autogenerado de mongo
          products:
            type: array
            items:
              $ref: '#components/schemas/ProductDB'
          quantity:
            type: number
            description: Cantidad de productos de este tipo en el carrito
    Error:
      type: object
      properties:
        error:
          type: string
  
  responses:
    NotFound:
      description: Error con los argumentos. Verifique que tenga ID validos para carrito o producto
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Usuario no autorizado para ver este recurso
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  
  requestBodies:
    logUser:
      type: object
      properties:
        email:
          type: string
          example: test@jmail.com
          description: Correo del usuario
        password:
          type: string
          example: "123"
          description: Contraseña del usuario
    newProduct:
      type: object
      properties:
        title:
          type: string
          description: Nombre del producto.
          example: FrutaMagíca
        description:
          type: string
          description: Descipcion del producto.
          example: Fruta especial
        code:
          type: string
          description: Codigo interno del producto.
          example: FM-100
        price:
          type: number
          description: Precio del producto.
          example: 1000000
        status:
          type: boolean
          description: Estado del producto (disponible/no disponible).
          example: true
        stock:
          type: number
          description: Stock disponible.
          example: 1
        category:
          type: string
          description: Categoria a la cual pertenece el producto.
          example: Frutas
        thumbnail:
          type: array
          items: 
            type: string
          description: Url del producto.
          example: [http://frutas/magicas]
    putProduct:
      type: object
      properties:
        prop:
          type: string
          description: Propiedad a cambiar
          example: value
    cargaCart:
      type: object
      properties:
        products:
          type: array
          items:
            type: object
            properties:
              pid:
                type: objectId
                example: 6674a1436f05df233631f749
                descripton: Id del producto a ingresar.
              quantity:
                type: number
                example: 14
                decription: Cantidad del producto a ingresar. 
          description: Lista de productos


